#tag Class
Protected Class Advent_2020_12_09
Inherits AdventBase
	#tag Event
		Function RunA() As Integer
		  return CalculateResultA( Normalize( kInput ) )
		  
		End Function
	#tag EndEvent

	#tag Event
		Function RunB() As Integer
		  return CalculateResultB( Normalize( kInput ) )
		End Function
	#tag EndEvent

	#tag Event
		Function RunTestA() As Integer
		  return CalculateResultA( Normalize( kTestInput ) )
		  
		End Function
	#tag EndEvent

	#tag Event
		Function RunTestB() As Integer
		  return CalculateResultB( Normalize( kTestInput ) )
		  
		End Function
	#tag EndEvent


	#tag Method, Flags = &h21
		Private Function CalculateResultA(input As String) As Integer
		  var nums() as integer = ToIntegerArray( input )
		  return GetBadNum( nums )
		  
		  
		End Function
	#tag EndMethod

	#tag Method, Flags = &h21
		Private Function CalculateResultB(input As String) As Integer
		  var nums() as integer = ToIntegerArray( input )
		  
		  if nums.Count = 0 then
		    return -1
		  end if
		  
		  var badNum as integer = GetBadNum( nums )
		  
		  var startIndex as integer
		  var endIndex as integer
		  
		  var sum as integer = nums( 0 )
		  
		  do
		    if sum < badNum then
		      endIndex = endIndex + 1
		      sum = sum + nums( endIndex )
		      
		    elseif sum > badNum then
		      sum = sum - nums( startIndex )
		      startIndex = startIndex + 1
		      
		      if endIndex < startIndex then
		        endIndex = startIndex
		        sum = nums( startIndex )
		      end if
		      
		    elseif sum = badNum then
		      var foundNums() as integer
		      for i as integer = startIndex to endIndex
		        foundNums.Add nums( i )
		      next
		      foundNums.Sort
		      return foundNums( 0 ) + foundNums( foundNums.LastIndex )
		      
		    end if
		  loop until startIndex >= nums.LastIndex or endIndex >= nums.LastIndex
		  
		  return -1
		End Function
	#tag EndMethod

	#tag Method, Flags = &h21
		Private Function GetBadNum(nums() As Integer) As Integer
		  var limit as integer = if( IsTest, 5, 25 )
		  
		  for i as integer = limit to nums.LastIndex
		    if not Match( i, nums, limit ) then
		      return nums( i )
		    end if
		  next
		  
		End Function
	#tag EndMethod

	#tag Method, Flags = &h21
		Private Function Match(index As Integer, nums() As Integer, limit As Integer) As Boolean
		  var value as integer = nums( index )
		  
		  var startIndex as integer = index - limit
		  var endIndex as integer = index - 1
		  
		  for i1 as integer = startIndex to endIndex - 1
		    for i2 as integer = i1 + 1 to endIndex
		      var v1 as integer = nums( i1 )
		      var v2 as integer = nums( i2 )
		      if v1 = v2 then
		        continue
		      end if
		      
		      if value = ( v1 + v2 ) then
		        return true
		      end if
		    next
		  next
		  
		  return false
		  
		End Function
	#tag EndMethod


	#tag Constant, Name = kInput, Type = String, Dynamic = False, Default = \"16\n19\n41\n7\n20\n3\n45\n40\n37\n25\n5\n22\n43\n48\n4\n23\n18\n47\n28\n11\n10\n42\n35\n6\n34\n21\n8\n9\n12\n7\n13\n38\n14\n15\n16\n17\n20\n19\n60\n22\n24\n27\n46\n44\n28\n18\n70\n23\n42\n25\n26\n21\n29\n30\n91\n34\n31\n32\n33\n35\n43\n41\n45\n47\n65\n39\n48\n49\n46\n44\n50\n51\n52\n63\n53\n54\n89\n59\n61\n64\n66\n105\n87\n68\n74\n92\n93\n124\n83\n154\n97\n217\n176\n120\n94\n122\n111\n106\n107\n246\n127\n123\n173\n125\n199\n142\n210\n151\n293\n185\n175\n207\n177\n299\n201\n383\n232\n200\n219\n450\n394\n213\n229\n234\n296\n401\n372\n267\n324\n530\n317\n328\n854\n352\n730\n518\n586\n377\n414\n560\n932\n432\n541\n453\n759\n447\n442\n463\n619\n749\n584\n591\n729\n641\n1049\n645\n947\n766\n784\n994\n877\n1307\n824\n846\n1661\n874\n1094\n1374\n889\n905\n1689\n1026\n1340\n1175\n1225\n1229\n1375\n2049\n2532\n1411\n2064\n1640\n1550\n1608\n1670\n2196\n1713\n2221\n2279\n2255\n2845\n1794\n1915\n1931\n4328\n2201\n2366\n2400\n2404\n3051\n2899\n3045\n3402\n3968\n2961\n3158\n3190\n3220\n5333\n6241\n3507\n3914\n5120\n3709\n4186\n4194\n3725\n3846\n7760\n4567\n5421\n7524\n8645\n5365\n6363\n11492\n6006\n6697\n6378\n6119\n6348\n8641\n11438\n7216\n10087\n7232\n7434\n7555\n10686\n13797\n9211\n7571\n11799\n17642\n13351\n15861\n11371\n11484\n11713\n12125\n12354\n12384\n23283\n12467\n15559\n13564\n14448\n21336\n21571\n24509\n14666\n23755\n15126\n19284\n25064\n27358\n18942\n22855\n28026\n25918\n23084\n43793\n24097\n23838\n46367\n24738\n24851\n26915\n26031\n50015\n28012\n29114\n52869\n29792\n47310\n47935\n38226\n34068\n44006\n41797\n42026\n42780\n46693\n46922\n48576\n47181\n74607\n48835\n48689\n52946\n89732\n54043\n54927\n63860\n116729\n57126\n76295\n68018\n71589\n81006\n206461\n82644\n85803\n83823\n88978\n113615\n95757\n166027\n143775\n95870\n102732\n97524\n103762\n103616\n126516\n108970\n135933\n165273\n120986\n125144\n184622\n162098\n139607\n152595\n163650\n166467\n264830\n169626\n221014\n198602\n384664\n204840\n193394\n199486\n493634\n324229\n201140\n207378\n229956\n278596\n234114\n414408\n246130\n294770\n264751\n292202\n301705\n476824\n420500\n330117\n428392\n368228\n493372\n391996\n392880\n464237\n400772\n394534\n441492\n408518\n431096\n575606\n437334\n464070\n480244\n498865\n716113\n771594\n918316\n556953\n593907\n820388\n825630\n1346708\n762762\n1012940\n760224\n823976\n784876\n839614\n803052\n795306\n878826\n1244544\n845852\n868430\n901404\n1826952\n944314\n979109\n1055818\n1150860\n1739620\n1317177\n1957222\n1378783\n1586738\n2882770\n1522986\n2903915\n1545100\n1555530\n1580182\n2737598\n2424390\n1671482\n1641158\n1714282\n1747256\n1769834\n1812744\n2218581\n1923423\n3078516\n3350016\n2206678\n2468037\n3969490\n2695960\n2901769\n4142004\n7319506\n3100630\n3103168\n3186258\n3125282\n3135712\n3221340\n3932863\n3953934\n3312640\n4714513\n3461538\n5321749\n3582578\n3736167\n4825192\n4902638\n4674715\n5108447\n5668216\n8793498\n6214409\n5799128\n6002399\n9260666\n8668447\n6203798\n9822960\n6260994\n6346622\n6357052\n6533980\n6774178\n9463937\n16238115\n8485216\n11117047\n11208695\n7318745\n15015069\n11021337\n12427192\n9783162\n11467344\n11670615\n12737778\n11801527\n12002926\n12263393\n12464792\n12550420\n12703674\n16169582\n24740704\n12880602\n12891032\n19693911\n14092923\n15803961\n18268378\n17101907\n18340082\n18527440\n24097807\n20804499\n29896884\n21250506\n22674194\n25441452\n23472142\n23804453\n35735535\n37205496\n36695485\n26983955\n25254094\n25584276\n34697022\n34331401\n25771634\n28694993\n42331893\n31194830\n32905868\n35370285\n55135900\n36867522\n39331939\n46772001\n66315894\n43924700\n46504600\n47928288\n47276595\n48726236\n49388729\n50838370\n80792222\n51025728\n52755589\n51355910\n72237807\n86103940\n54466627\n56966464\n59889823\n83372122\n70526769\n68276153\n103738465\n76199461\n83256639\n85836539\n100683877\n90429300\n116162507\n95893329\n95204883\n98114965\n100227099\n100414457\n123263535\n108322374\n102381638\n104111499\n200641556\n168503252\n111433091\n114356450\n171210646\n138802922\n144475614\n170941226\n151532792\n159456100\n162036000\n169093178\n176265839\n185634183\n250236013\n191098212\n196307786\n195431982\n266147499\n248587113\n202796095\n267778474\n206493137\n322474018\n215544590\n225789541\n253159372\n283278536\n303931714\n340783400\n290335714\n375000690\n474376748\n310988892\n468912719\n388430278\n453032108\n372573625\n376732395\n518014487\n386530194\n398228077\n401925119\n472640636\n418340685\n409289232\n520937846\n459652509\n478948913\n536778433\n865479107\n678932404\n587210250\n594267428\n715784090\n466456641\n1108148096\n1105224737\n1325131616\n846182703\n749306020\n945405554\n770801702\n763262589\n816568762\n2040915706\n800153196\n946067665\n827629917\n868941741\n875745873\n926109150\n1353347195\n1003235074\n1053666891\n1442194993\n1924716858\n1060724069\n1182240731\n1646547575\n1215762661\n1520107722\n1512568609\n1534064291\n1549459216\n1773697582\n1853820087\n1696910852\n1563415785\n1692314635\n1627783113\n2455413030\n1753739067\n1744687614\n1801855023\n1878980947\n1929344224\n2185475805\n2114390960\n2242964800\n4200100644\n2276486730\n4155467677\n2398003392\n2735870383\n3330153621\n3806705595\n3204883244\n5606640351\n3241773851\n4152323882\n3191198898\n3255730420\n3308103399\n3320097748\n3372470727\n4142691006\n4993053921\n3808325171\n5718101140\n6079081591\n4114820029\n4299866765\n5319274204\n4519451530\n4674490122\n5012357113\n5133873775\n5589202290\n6043973782\n8389604195\n6396082142\n6432972749\n8926738099\n6446929318\n10753571713\n6499302297\n9026204539\n6628201147\n6692568475\n7180795898\n8634271559\n7923145200\n8108191936\n8819318295\n8414686794\n8789310151\n8974356887\n9193941652\n9531808643\n9686847235\n10146230888\n10723076065\n11633176072\n15237915434\n19556321272\n12829054891\n12932275046\n13680098195\n15236239469\n15133573856\n20409923300\n15107255269\n25313274267\n14800760411\n15103941098\n16031337136\n16337831994\n17203996945\n17793675182\n17389043681\n17763667038\n18168298539\n18725750295\n26920852324\n40551189701\n20869306953\n28837173017\n27936310160\n33698361844\n25761329937\n26509153086\n31138592405\n28480858606\n29904701509\n34593040626\n46600840055\n29908015680\n30832097547\n31135278234\n31441773092\n32369169130\n33726875675\n46226216698\n35152710719\n53878461014\n35931965577\n63603063353\n52682182261\n46630636890\n47378460039\n59071588394\n52270483023\n53697640097\n54242188543\n95003553971\n54990011692\n58385560115\n59812717189\n67067243811\n86431784784\n67373738669\n113293460509\n61967375781\n95044836445\n114061600086\n66096044805\n68879586394\n71084676296\n113697880701\n82562602467\n83310425616\n94009096929\n98901119913\n99648943062\n101076100136\n106512671566\n108687651789\n107939828640\n109232200235\n200521768495\n113375571807\n118198277304\n125908761994\n128063420586\n167172144941\n136253325063\n184386525752\n130846962175\n134975631199\n137180721101\n139964262690\n270811224865\n153647278763\n165873028083\n336775093558\n177319522545\n200725043198\n198550062975\n208336594851\n207588771702\n250556292908\n216627480429\n217172028875\n222607772042\n559382865600\n249628896870\n268027683276\n253972182580\n258910382761\n265822593374\n317283785235\n329397025150\n348300857541\n272156352300\n533850276650\n293611541453\n713030144363\n330966801308\n415501924953\n449475874845\n375869585520\n424216252131\n425508623726\n415925366553\n424760800577\n433799509304\n439235252471\n439779800917\n481518154803\n521999865856\n531066735061\n512882565341\n547583724033\n524732976135\n755183053439\n754157825727\n565767893753\n1072316700168\n1053066600917\n624578342761\n669481126973\n706836386828\n746468726261\n1058377852065\n800085837651\n791794952073\n840141618684\n840686167130\n1371047069022\n1285224560788\n1090500869888\n1193393078198\n921297955720\n994400720144\n1034882431197\n1235249020726\n1331414729589\n1113351617786\n1190346236514\n1464719961445\n1312236620014\n1272604280581\n1640772004781\n1294059469734\n1376317513801\n1415949853234\n1765214238893\n1538263678334\n1858463689716\n1591880789724\n1631936570757\n2304861580129\n2557828841369\n1915698675864\n2193902236301\n2225228667711\n2107752337930\n2111644192234\n2507853301307\n2328941900931\n3884170815108\n2303697854300\n2385955898367\n2462950517095\n2566663750315\n2584840900595\n2648921794382\n3234781203517\n4017892469124\n2792267367035\n3223817360481\n3130144468058\n5539642783646\n3547635246621\n3507579465588\n3739688908687\n4023451013794\n4027342868098\n4219396530164\n4301654574231\n6608291914389\n5731670661788\n6299846832623\n4714897799298\n4791892418026\n6027048570552\n5620737101884\n4848906415462\n5255217884130\n5151504650910\n5233762694977\n10054391438650\n5922411835093\n9470047081714\n6016084727516\n6677779714679\n6637723933646\n7055214712209\n7287324155308\n10794903620896\n16354238271273\n8934294329462\n9068302945626\n8521051104395\n11148753248085\n9506790217324\n17341715593958\n12704828285231\n9563804214760\n11829284365589\n10000411066372\n10082669110439\n17589354050021\n10385267345887\n11073916486003\n11156174530070\n18361240641311\n11938496562609\n12653808661162\n12693864442195\n13315503648325\n15706026879272\n18436077403393\n16794114372632\n26009368090520\n30035580036153\n18906318450282\n18027841321719\n18084855319155\n20580706703327\n19070594432084\n28470122665042\n19564215281132\n19646473325199\n27868030858635\n38007713966510\n20467936456326\n34878969691787\n21459183831890\n23727725147165\n31560127111444\n54525443016986\n24592305223771\n43351083684478\n51124342392576\n29021530527597\n58606694838952\n34821955694351\n35700432822914\n45079962522604\n49929306496932\n36934159772001\n37155449751239\n58475650422836\n38634809713216\n38717067757283\n41105657157089\n60883174898404\n40114409781525\n41927120288216\n44195661603491\n45060241680097\n45186908979055\n56152432335215\n48320030370936\n53613835751368\n59414260918122\n78173039378829\n82041530069741\n79082570039455\n63843486221948\n70522388517265\n74936365475876", Scope = Private
	#tag EndConstant

	#tag Constant, Name = kTestInput, Type = String, Dynamic = False, Default = \"35\n20\n15\n25\n47\n40\n62\n55\n65\n95\n102\n117\n150\n182\n127\n219\n299\n277\n309\n576", Scope = Private
	#tag EndConstant


	#tag ViewBehavior
		#tag ViewProperty
			Name="Priority"
			Visible=true
			Group="Behavior"
			InitialValue="5"
			Type="Integer"
			EditorType=""
		#tag EndViewProperty
		#tag ViewProperty
			Name="StackSize"
			Visible=true
			Group="Behavior"
			InitialValue="0"
			Type="Integer"
			EditorType=""
		#tag EndViewProperty
		#tag ViewProperty
			Name="DebugIdentifier"
			Visible=false
			Group="Behavior"
			InitialValue=""
			Type="String"
			EditorType="MultiLineEditor"
		#tag EndViewProperty
		#tag ViewProperty
			Name="ThreadID"
			Visible=false
			Group="Behavior"
			InitialValue=""
			Type="Integer"
			EditorType=""
		#tag EndViewProperty
		#tag ViewProperty
			Name="ThreadState"
			Visible=false
			Group="Behavior"
			InitialValue=""
			Type="ThreadStates"
			EditorType="Enum"
			#tag EnumValues
				"0 - Running"
				"1 - Waiting"
				"2 - Paused"
				"3 - Sleeping"
				"4 - NotRunning"
			#tag EndEnumValues
		#tag EndViewProperty
		#tag ViewProperty
			Name="Name"
			Visible=true
			Group="ID"
			InitialValue=""
			Type="String"
			EditorType=""
		#tag EndViewProperty
		#tag ViewProperty
			Name="Index"
			Visible=true
			Group="ID"
			InitialValue="-2147483648"
			Type="Integer"
			EditorType=""
		#tag EndViewProperty
		#tag ViewProperty
			Name="Super"
			Visible=true
			Group="ID"
			InitialValue=""
			Type="String"
			EditorType=""
		#tag EndViewProperty
		#tag ViewProperty
			Name="Left"
			Visible=true
			Group="Position"
			InitialValue="0"
			Type="Integer"
			EditorType=""
		#tag EndViewProperty
		#tag ViewProperty
			Name="Top"
			Visible=true
			Group="Position"
			InitialValue="0"
			Type="Integer"
			EditorType=""
		#tag EndViewProperty
	#tag EndViewBehavior
End Class
#tag EndClass
